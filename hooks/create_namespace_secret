#!/usr/bin/env bash

source /hooks/common/functions.sh

hook::config() {
  cat <<EOF
{
  "configVersion":"v1",
  "kubernetes": [
    {
      "apiVersion": "v1",
      "kind": "namespace",
      "executeHookOnEvent": [
        "Added"
      ]
    }
  ]
}
EOF
}

hook::trigger() {
  # ignore Synchronization for simplicity
  # TODO: check each namespace in .[0].objects
  type=$(jq -r '.[0].type' $BINDING_CONTEXT_PATH)
  if [[ $type == "Synchronization" ]] ; then
    echo Got Synchronization event
    exit 0
  fi

  namespace=$(jq -r ".[] | .object.metadata | select(.name == \"${MAIN_NAMESPACE}\" | not ) | .name" $BINDING_CONTEXT_PATH);
  # Copy all the secrets with a label of pull-secret
  for secret in $(kubectl -n ${MAIN_NAMESPACE} get secret -l copy-secret="yes" -o jsonpath="{.items[*].metadata.name}");
  do
    # Copy secret
    kubectl -n ${MAIN_NAMESPACE} get secret/$secret -o json | \
      jq -r ".metadata.namespace=\"${namespace}\" |
              .metadata |= with_entries(select([.key] | inside([\"name\", \"namespace\", \"labels\"])))" \
      | kubectl::replace_or_create
  done
}

common::run_hook "$@"
